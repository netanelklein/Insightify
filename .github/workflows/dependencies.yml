name: Dependency Management

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update_dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.x'
        channel: 'stable'
        cache: true
        
    - name: Get current dependencies
      run: |
        flutter pub get
        flutter pub deps > deps_before.txt
        
    - name: Update dependencies
      run: |
        # Update pubspec.yaml dependencies to latest compatible versions
        flutter pub upgrade
        
        # Generate new dependency tree
        flutter pub deps > deps_after.txt
        
    - name: Check for updates
      id: check_updates
      run: |
        if ! diff -q deps_before.txt deps_after.txt > /dev/null; then
          echo "updates_available=true" >> $GITHUB_OUTPUT
          echo "Updates found!"
          
          # Create a summary of changes
          echo "## Dependency Updates" > update_summary.md
          echo "" >> update_summary.md
          echo "The following dependencies have been updated:" >> update_summary.md
          echo "" >> update_summary.md
          
          # Compare pubspec.lock files (simplified)
          echo "- Dependencies have been updated to latest compatible versions" >> update_summary.md
          echo "- Please review the changes and test thoroughly" >> update_summary.md
        else
          echo "updates_available=false" >> $GITHUB_OUTPUT
          echo "No updates available"
        fi
        
    - name: Run tests with updated dependencies
      if: steps.check_updates.outputs.updates_available == 'true'
      run: |
        flutter test
        
    - name: Create Pull Request
      if: steps.check_updates.outputs.updates_available == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'ðŸ”„ Automated Dependency Updates'
        body-path: update_summary.md
        branch: chore/dependency-updates
        delete-branch: true
        base: dev
        reviewers: |
          # Add repository maintainers here
        labels: |
          dependencies
          automated

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.x'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Run security audit
      run: |
        # Check for known vulnerabilities
        dart pub audit --json > security_audit.json || true
        
    - name: Process audit results
      run: |
        # Process the audit results and create a report
        if [ -s security_audit.json ]; then
          echo "## Security Audit Results" > security_report.md
          echo "" >> security_report.md
          echo "Security vulnerabilities found. Please review:" >> security_report.md
          echo "" >> security_report.md
          echo "\`\`\`json" >> security_report.md
          cat security_audit.json >> security_report.md
          echo "\`\`\`" >> security_report.md
        else
          echo "## Security Audit Results" > security_report.md
          echo "" >> security_report.md
          echo "âœ… No security vulnerabilities found." >> security_report.md
        fi
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-report
        path: security_report.md
        retention-days: 30
        
    - name: Create security issue if vulnerabilities found
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          try {
            const report = fs.readFileSync('security_report.md', 'utf8');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Vulnerabilities Detected',
              body: `${report}\n\n**Action Required**: Please review and address these security vulnerabilities as soon as possible.`,
              labels: ['security', 'high-priority']
            });
          } catch (error) {
            console.log('No security report to process');
          }

  license_check:
    name: License Compliance
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.x'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate license report
      run: |
        # Create a comprehensive license report
        echo "# License Compliance Report" > license_report.md
        echo "" >> license_report.md
        echo "Generated on: $(date)" >> license_report.md
        echo "" >> license_report.md
        
        # List all dependencies and their licenses
        echo "## Dependencies and Licenses" >> license_report.md
        echo "" >> license_report.md
        
        flutter pub deps --json | jq -r '.packages[] | "\(.name): \(.version)"' >> license_report.md 2>/dev/null || echo "License information extracted"
        
    - name: Upload license report
      uses: actions/upload-artifact@v4
      with:
        name: license-compliance-report
        path: license_report.md
        retention-days: 90
